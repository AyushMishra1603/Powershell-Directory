Function HollowKnight_InstallTestCase(){

  $game_title = "HollowKnight"
  $game_title_hub = "Hollow Knight"
  $testDescriptionPass = ""
  $testDescriptionFail = ""  
  $tc_status = $false
  $loop_status = $true
  $case_cnt = 0
  $Global:ElapsedTime = 90  
  $GameUpdateFound = $false  

  $isHomeScreen = VerifyHomeScreen 
  <# Need to see if we need to exit the game as home screen is not coming #>  

  while($loop_status){

     switch($case_cnt){
        0 {          
            #Navigate to my store
            NavigateToMyGamesandApps_Relay
            #go to search page
            Navigate2SearchPage
            #Enter Game Name Hollow Knight
            $gameSearched=EnterGameName_HollowKnight
            if($gameSearched -eq $true){  
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step1>' -replacewithtext "Success"
                Start-Sleep -Seconds 2                
                $case_cnt++
            }
            else{
                $case_cnt = 20
                $tc_status = $false
                $testDescriptionFail = "Unable to go to Store to search game " + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step1>' -replacewithtext $testDescriptionFail                 
            }

            
          }

        1{
             MoveGame
             $Global:ElapsedTime = 1800
             Set_FixedDelay -DelayTime $Global:OneSec
             Captured_ImgPath -img_name "Game_MovedtoExternal"
             Icon_ImgPath -img_name "Game_MovedtoExternal"
             $ExpectedText = "External"
             $isMovedtoExternal = VerifyOCRTextMatch -ExtractRegionLabel "Game_MovedtoExternal"  -PageLabel "label1" -ExpectedText $ExpectedText
            if($isMovedtoExternal -eq $true){

                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step2>' -replacewithtext "Success"
                $case_cnt++
            }
            else{
                $case_cnt = 20
                $tc_status = $false
                $testDescriptionFail = "Unable to select game " + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step2>' -replacewithtext $testDescriptionFail
            
            }


         }   

        2{
            #Navigate to my store
            NavigateToMyGamesandApps_Relay
            #go to search page
            Navigate2SearchPage
            #Enter Game Name Hollow Knight
            $gameLaunched=EnterGameName_HollowKnight
            #search game and launch
            ConsoleOne_CtrllerMenu
            ConsoleOne_CtrllerEnter
            if($gameLaunched -eq $true)
            {
             $case_cnt++
             ReplaceTag –Document $Doc -FindText '<HollowKnight_Step3>' -replacewithtext "Success"
            }           
            
            else{
                $case_cnt = 20
                $tc_status = $false
                $testDescriptionFail = "unable to launch game from external drive " + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step3>' -replacewithtext $testDescriptionFail
            }   
           
         }


        3{   
                                 
           Start-Sleep -Seconds 5
            $Global:ElapsedTime = 60

            $isChooseExpScreen = Pattern_Verification -CapturedImage "HollowKnight_Home" -IconImage "HollowKnight_Home"
            if($isChooseExpScreen -eq $true){
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step4>' -replacewithtext "Success"
                $case_cnt ++               
            }

            else
            {              
                $case_cnt = 20
                $tc_status = $false
                $testDescriptionFail = "Unable to find first interactive screen from external  " + $game_title
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step4>' -replacewithtext $testDescriptionFail

            }                 
         } 
         
         4{   
             #Quit the game
            $isGameQuit = Quit_LaunchedGame_Relay -console $Global:Once          

            if($isGameQuit -eq $true){
                $case_cnt ++   
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step5>' -replacewithtext "Success"            
            }
            else
            {
                $case_cnt = 20
                $tc_status = $false                
                $testDescriptionFail = "Unable to Quit GAME " + $game_title 
                Debug_Info 5 "Unable to Exit from external Game"   
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step5>' -replacewithtext $testDescriptionFail               
            }      
         }            
      

        5{  #Navigate to my store
            NavigateToMyGamesandApps_Relay
            #go to search page
            Navigate2SearchPage
            #Enter Game Name Hollow Knight
            $gameLaunched=EnterGameName_HollowKnight
            #search game and launch
            ConsoleOne_CtrllerMenu
            ConsoleOne_CtrllerEnter
            if($gameLaunched -eq $true){
                $case_cnt++           
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step6>' -replacewithtext "Success"            
            }
            else
            {
                $case_cnt = 20
                $tc_status = $false                
                $testDescriptionFail = "Unable to search game " + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step6>' -replacewithtext $testDescriptionFail               
            }
            
        }

        6{
             MoveGame
             $Global:ElapsedTime = 1800
             Set_FixedDelay -DelayTime $Global:OneSec
             Captured_ImgPath -img_name "Game_MovedtoInternal"
             Icon_ImgPath -img_name "Game_MovedtoInternal"
             $ExpectedText = "7.6 GB"
             $isMovedtoInternal = VerifyOCRTextMatch -ExtractRegionLabel "Game_MovedtoInternal"  -PageLabel "label1" -ExpectedText $ExpectedText
            if($isMovedtoExternal -eq $true){
                $case_cnt++    
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step7>' -replacewithtext "Success"            
            }
            else
            {
                $case_cnt = 20
                $tc_status = $false                
                $testDescriptionFail = "Unable to move game external to internal" + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step7>' -replacewithtext $testDescriptionFail               
            }

        }

         7{
             #Navigate to my store
            NavigateToMyGamesandApps_Relay
            #go to search page
            Navigate2SearchPage
            #Enter Game Name Hollow Knight
            $gameLaunched=EnterGameName_HollowKnight
            #search game and launch
            ConsoleOne_CtrllerMenu
            ConsoleOne_CtrllerEnter
            if($gameLaunched -eq $true){
                $case_cnt++    
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step8>' -replacewithtext "Success"            
            }
            else
            {
                $case_cnt = 20
                $tc_status = $false                
                $testDescriptionFail = "Unable to launch game from internal" + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step8>' -replacewithtext $testDescriptionFail               
            }

        }

        8{   
            Start-Sleep -Seconds 5
            $Global:ElapsedTime = 60
            $isChooseExpScreen = Pattern_Verification -CapturedImage "HollowKnight_Home" -IconImage "HollowKnight_Home"
            if($isChooseExpScreen -eq $true){
                $case_cnt ++   
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step9>' -replacewithtext "Success"            
            }
            else
            {
                $case_cnt = 20
                $tc_status = $false                
                $testDescriptionFail = "Unable to verify first screen from internal " + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step9>' -replacewithtext $testDescriptionFail               
            }      
         }         

         9{   
             #Quit the game
            $isGameQuit = Quit_LaunchedGame_Relay -console $Global:Once          

            if($isGameQuit -eq $true){
                $tc_status = $true           
                $case_cnt = 20            
                $testDescriptionPass = "Success"  
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step10>' -replacewithtext "Success"            
            }
            else
            {
                $case_cnt = 20
                $tc_status = $false                
                $testDescriptionFail = "Unable to quit game from internal " + $game_title 
                ReplaceTag –Document $Doc -FindText '<HollowKnight_Step10>' -replacewithtext $testDescriptionFail               
            }      
         }         


        20{
            FinalizeGameStatus -game_title $game_title  -game_title_hub $game_title_hub -tc_status $tc_status -GameUpdateFound $GameUpdateFound -testDescriptionFail $testDescriptionFail -testDescriptionPass $testDescriptionPass                             
            $loop_status = $false            
        }

        default{
        $loop_status = $false
        } 
     }
  }
   
  return $tc_status
}

Function MoveGame{
#Press menu to search game
 ConsoleOne_CtrllerMenu
 ConsoleOne_CtrllerMenu
 #go to manage game and add-ons
 ConsoleOne_CtrllerDwn
 ConsoleOne_CtrllerDwn
 ConsoleOne_CtrllerEnter
 Start-Sleep -Seconds 2
 #select move all
 ConsoleOne_CtrllerRht
 ConsoleOne_CtrllerUp
 ConsoleOne_CtrllerEnter
 #Selext move
 Start-Sleep -Seconds 5
 ConsoleOne_CtrllerEnter
}

Function EnterGameName_HollowKnight{
    Start-Sleep -Seconds 3
    #H
    ConsoleOne_CtrllerDwn
    ConsoleOne_CtrllerEnter
    #o
    ConsoleOne_CtrllerRht
    ConsoleOne_CtrllerRht
    ConsoleOne_CtrllerRht
    ConsoleOne_CtrllerUp
    ConsoleOne_CtrllerEnter
    #l
    ConsoleOne_CtrllerDwn
    ConsoleOne_CtrllerEnter
    #l
    ConsoleOne_CtrllerEnter
        
    return $true
}